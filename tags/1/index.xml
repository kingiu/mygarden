<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>1 on</title><link>https://guozhi.3hmy.cn/tags/1/</link><description>Recent content in 1 on</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://guozhi.3hmy.cn/tags/1/index.xml" rel="self" type="application/rss+xml"/><item><title>鸟姐的dataviewjs技巧</title><link>https://guozhi.3hmy.cn/%E9%B8%9F%E5%A7%90%E7%9A%84dataviewjs%E6%8A%80%E5%B7%A7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://guozhi.3hmy.cn/%E9%B8%9F%E5%A7%90%E7%9A%84dataviewjs%E6%8A%80%E5%B7%A7/</guid><description>代码描述 CTRL+SHIFT+I 是你的朋友：你可以使用 console.log(x) 和 object，然后查看它的内部结构，这样你就知道如何使用它了。 遍历 YAML 元数据字段：我发现这些对象很难使用，最可靠的迭代方法是for (let key of Object.keys(x)){ }或for (let[key, val]of Object.entries(x)){ } 输出和设置数据样式：除了文档dv.list()并dv.Table没有就如何实际输出数据提供很多指导。您可以使用dv.el()它来创建 HTML 元素，但与从 Obsidian API 中使用相比，它非常有限，createEl()因为此函数可以向元素添加类和 ID 等等。dataviewjs 创建了一个容器，您可以引用它this.</description></item></channel></rss>